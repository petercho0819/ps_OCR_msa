version: '3.8'

services:
  auth:
    build:
      context: .
      dockerfile: apps/auth/Dockerfile
      target: production
    environment:
      - NODE_ENV=production
    env_file:
      - ./apps/auth/.env.prod
    ports:
      - "4001:4001"
    depends_on:
      - rabbitmq
      - mongo
    networks:
      - app-network

  company:
    build:
      context: .
      dockerfile: apps/company/Dockerfile
      target: production
    environment:
      - NODE_ENV=production
    env_file:
      - ./apps/company/.env.prod
    ports:
      - "4002:4002"
    depends_on:
      - rabbitmq
      - mongo
    networks:
      - app-network      

  receipt:
    build:
      context: .
      dockerfile: apps/receipt/Dockerfile
      target: production
    environment:
      - NODE_ENV=production
    env_file:
      - ./apps/receipt/.env.prod
    ports:
      - "4003:4003"
    depends_on:
      - rabbitmq
      - mongo
    networks:
      - app-network

  email:
    build:
      context: .
      dockerfile: apps/email/Dockerfile
      target: production
    environment:
      - NODE_ENV=production
    env_file:
      - ./apps/email/.env.prod
    ports:
      - "4005:4005"
    depends_on:
      - rabbitmq
      - mongo
    networks:
      - app-network
      
  setting:
    build:
      context: .
      dockerfile: apps/setting/Dockerfile
      target: production
    environment:
      - NODE_ENV=production
    env_file:
      - ./apps/setting/.env.prod
    ports:
      - "4004:4004"
    depends_on:
      - rabbitmq
      - mongo
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - '5672:5672'  # AMQP protocol port
      - '15672:15672'  # Management UI
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      - app-network

  mongo:
    image: mongo
    ports:
      - "27017:27017"

networks:
  app-network:
    driver: bridge

volumes:
  mongo-data:
  rabbitmq-data: